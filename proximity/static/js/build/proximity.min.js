var UserLocationModel=Backbone.Model.extend({initialize:function(){_.bindAll(this,"updateLocation","success","failure"),this.updateLocation()},updateLocation:function(){navigator.geolocation?navigator.geolocation.getCurrentPosition(this.success,this.failure):this.trigger("proximity:error",{reason:"Browser does not support GeoLocation."})},success:function(a){var b=[a.coords.longitude,a.coords.latitude];this.set("loc",b),this.trigger("user:location_updated")},failure:function(a){var b="";switch(a.code){case a.PERMISSION_DENIED:b="User denied the request for Geolocation.";break;case a.POSITION_UNAVAILABLE:b="Location information is unavailable.";break;case a.TIMEOUT:b="The request to get user location timed out.";break;default:b="An unknown error occurred."}this.trigger("proximity:error",{reason:"Could not get current position: "+b})}}),UsersModel=Backbone.Model.extend({url:function(){return"https://"+document.location.host+"/users"}}),UsersNearModel=Backbone.Model.extend({url:function(){return"https://"+document.location.host+"/users_near"}}),ErrorsView=Backbone.View.extend({el:$("#errors"),initialize:function(){_.bindAll(this,"render","addError"),this.errors=[]},render:function(){var a=_.template($("#errors-template").html());this.$el.html(a({errors:this.errors}))},addError:function(a){this.errors.push(a)}}),LoginView=Backbone.View.extend({el:$("#account"),events:{"submit #loginform":"login"},initialize:function(){_.bindAll(this,"render","login")},render:function(){var a=_.template($("#loginform-template").html());this.$el.html(a())},login:function(a){a.preventDefault();var b=$("#name").val(),c=$("#pass").val(),d=$("#age").val(),e=$("input:radio[name=gender]:checked").val(),f=$("#looking_for_m").val(),g=$("#looking_for_f").val();if(!b)return void this.trigger("proximity:error",{reason:"Please fill in your name."});if(!c)return void this.trigger("proximity:error",{reason:"Please fill in your password."});if(!d)return void this.trigger("proximity:error",{reason:"Please fill in your age."});if(!e)return void this.trigger("proximity:error",{reason:"Please fill in your gender."});if(!f&&!g)return void this.trigger("proximity:error",{reason:"Please fill in if you' looking for men or women."});if(!this.isValidAge(d))return void this.trigger("proximity:error",{reason:"Age must be a positive number."});var h=new UsersModel;h.set("name",b),h.set("pass",c),h.set("age",parseInt(d)),h.set("gender",e),h.set("looking_for_m","on"==f?1:0),h.set("looking_for_f","on"==g?1:0),this.trigger("user:login",h)},isValidAge:function(a){return!isNaN(a)&&parseInt(Number(a))==a&&parseInt(a)>1}}),LogoutView=Backbone.View.extend({el:$("#account"),events:{"click #logoutbtn":"logout"},initialize:function(a){_.bindAll(this,"render","logout"),this.user=a},render:function(){var a=_.template($("#logoutform-template").html());this.$el.html(a({user:this.user}))},logout:function(a){a.preventDefault(),this.trigger("user:logout")}}),MapView=Backbone.View.extend({el:$("#map-canvas"),initialize:function(){_.bindAll(this,"newMap","render","centerMap","addUserMarkerToMap"),map=this.newMap(),this.bounds=new google.maps.LatLngBounds,google.maps.event.addDomListener(window,"resize",this.centerMap)},newMap:function(){var a={center:new google.maps.LatLng(0,0),zoom:1,mapTypeId:google.maps.MapTypeId.ROADMAP};return new google.maps.Map(this.el,a)},render:function(a,b){if(map=this.newMap(),this.bounds=new google.maps.LatLngBounds,b){var c=this.addUserMarkerToMap(b.attributes,"static/images/map-pin-green.png");this.bounds.extend(c)}for(var d=a.get("users"),e=0;e<d.length;e++){var f=d[e];c=this.addUserMarkerToMap(f),this.bounds.extend(c)}this.centerMap()},centerMap:function(){this.bounds.isEmpty()||(map.setCenter(this.bounds.getCenter()),map.fitBounds(this.bounds))},addUserMarkerToMap:function(a,b){var c=new google.maps.LatLng(a.loc[1],a.loc[0]),d=new google.maps.Marker({position:c,map:map,title:a.name,icon:b});return this.attachInfoWindowToMarker(d,a),c},attachInfoWindowToMarker:function(a,b){var c=_.template($("#infowindow-template").html())({user:b}),d=new google.maps.InfoWindow({content:c});google.maps.event.addListener(a,"click",function(){d.open(map,a)})}}),IndexRouter=Backbone.Router.extend({initialize:function(){_.bindAll(this,"refresh","onUserSaved","onUserLogout","onProximityError"),this.refresh()},refresh:function(){this.errorsView=new ErrorsView,this.errorsView.render();var a=this.findUserInCookies();if(this.currentUser=a,this.currentUser){this.storeUserInCookies(this.currentUser);var b=new UsersNearRouter(this.currentUser);this.listenTo(b,"user:logout",this.onUserLogout),this.listenTo(b,"proximity:error",this.onProximityError)}else{var c=new UsersRouter;this.listenTo(c,"user:saved",this.onUserSaved),this.listenTo(c,"proximity:error",this.onProximityError)}},onUserSaved:function(a){this.storeUserInCookies(a),this.refresh()},onUserLogout:function(){this.deleteUserFromCookies(),this.refresh()},onProximityError:function(a){this.errorsView.addError(a),this.errorsView.render()},findUserInCookies:function(){var a="proximity.user=",b=document.cookie.indexOf(a);if(-1==b)return void 0;var c=document.cookie.indexOf("; ",b);-1==c&&(c=document.cookie.length);var d=document.cookie.substring(b+a.length,c);if(""==d)return void 0;var e=JSON.parse(d),f=new UsersModel;for(param in e)f.set(param,e[param]);return f},storeUserInCookies:function(a){var b=new Date;b.setTime(b.getTime()+18e5);var c="expires="+b.toUTCString();document.cookie="proximity.user="+JSON.stringify(a)+"; "+c},deleteUserFromCookies:function(){var a=new Date;a.setTime(a.getTime()-1e3),document.cookie="proximity.user={}; expires="+a.toUTCString()}}),UsersRouter=Backbone.Router.extend({initialize:function(){_.bindAll(this,"onUserLogin","usersFetched","userSaved","userSaveError","onProximityError"),this.usersModel=new UsersModel,this.userLocationModel=new UserLocationModel,this.mapView=new MapView,this.loginView=new LoginView,this.loginView.render(),this.listenTo(this.loginView,"user:login",this.onUserLogin),this.listenTo(this.userLocationModel,"proximity:error",this.onProximityError),this.listenTo(this.loginView,"proximity:error",this.onProximityError),this.listenTo(this.mapView,"proximity:error",this.onProximityError),this.listenTo(this.usersModel,"proximity:error",this.onProximityError),this.usersModel.fetch({success:this.usersFetched})},onUserLogin:function(a){this.userLocationModel.has("loc")?(a.set("loc",this.userLocationModel.get("loc")),a.save({},{success:this.userSaved,error:this.userSaveError})):this.trigger("proximity:error",{reason:"Location required to log in."})},usersFetched:function(a){this.mapView.render(a)},userSaved:function(a){this.trigger("user:saved",a.get("user"))},userSaveError:function(a,b){this.trigger("proximity:error",{reason:"Could not save user: "+b.error})},onProximityError:function(a){this.trigger("proximity:error",a)}}),UsersNearRouter=Backbone.Router.extend({initialize:function(a){_.bindAll(this,"fetchUsersNear","usersNearFetched","usersNearFetchError","onUserLogout","onUserLocationUpdated","userSaved","userSaveError","onProximityError"),this.currentUser=a,this.usersNearModel=new UsersNearModel,this.userLocationModel=new UserLocationModel,this.mapView=new MapView,this.logoutView=new LogoutView(a),this.logoutView.render(),this.listenTo(this.logoutView,"user:logout",this.onUserLogout),this.listenTo(this.userLocationModel,"user:location_updated",this.onUserLocationUpdated),this.listenTo(this.userLocationModel,"proximity:error",this.onProximityError),this.listenTo(this.logoutView,"proximity:error",this.onProximityError),this.listenTo(this.mapView,"proximity:error",this.onProximityError),this.listenTo(this.usersNearModel,"proximity:error",this.onProximityError),this.fetchUsersNear()},fetchUsersNear:function(){this.usersNearModel.fetch({data:{uid:this.currentUser.get("uid")},success:this.usersNearFetched,error:this.usersNearFetchError})},usersNearFetched:function(a){this.mapView.render(a,this.currentUser)},usersNearFetchError:function(){this.trigger("user:logout"),this.trigger("proximity:error",{reason:"Error fetching users near current user, try logging in again."})},onUserLogout:function(){this.trigger("user:logout")},onUserLocationUpdated:function(){this.currentUser.set("loc",this.userLocationModel.get("loc")),this.currentUser.save()},userSaved:function(a){this.trigger("user:saved",a.get("user"))},userSaveError:function(a,b){this.trigger("proximity:error",{reason:"Could not save user: "+b.error})},onProximityError:function(a){this.trigger("proximity:error",a)}});